services:
  web-prod:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:80"
    depends_on:
      - db-prod
    restart: on-failure
    networks:
      - shared-prod
      - prod-proxy
    profiles:
      - prod

  nginx:
      image: nginx:latest
      container_name: nginx
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - /etc/letsencrypt/live/example.com/fullchain.pem:/etc/letsencrypt/live/example.com/fullchain.pem
        - /etc/letsencrypt/live/example.com/privkey.pem:/etc/letsencrypt/live/example.com/privkey.pem
      depends_on:
        - web-prod
      networks:
        - prod-proxy
      profiles:
        - prod

  db-prod:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - shared-prod
    profiles:
      - prod

  redis:
    image: redis:7
    container_name: redis
    restart: always
    networks:
      - shared-dev
      - shared-prod
    profiles:
      - dev
      - prod
  
  # dev environment with live-reload
  web-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    volumes:
      - ./:/app
    ports:
      - "8000:80"
    depends_on:
      - db-dev
    networks:
      - shared-dev
    profiles:
      - dev

  db-dev:
    image: postgres:17
    env_file:
      - .env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shared-dev
    profiles:
      - dev

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    networks:
      - shared-dev
    profiles:
      - test

volumes:
  pgdata:

networks:
  shared-dev:
  shared-prod:
  prod-proxy:
